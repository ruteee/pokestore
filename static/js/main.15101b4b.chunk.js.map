{"version":3,"sources":["header.js","pokeCard.js","nestedGrid.js","cart.js","search.js","App.js","serviceWorker.js","index.js","images/logos/logo.png"],"names":["Header","className","src","logo","alt","useStyles","makeStyles","root","maxWidth","media","alignItems","alignText","height","width","objectFit","content","textTransform","PokeCard","props","classes","Card","coins","price","CardActionArea","CardMedia","image","title","CardContent","List","ListItemText","component","name","CardActions","Button","size","variant","color","onClick","e","log","card","cardContent","preventDefault","dictId","i","Math","floor","random","NestedGrid","useState","pokemonData","setPokemonData","logData","data","logapp","GridLine","console","map","pokemon","Grid","key","item","xs","url","split","length","useEffect","a","axios","get","response","results","getData","container","spacing","cardHeader","fontSize","textAlign","Cart","Number","CardHeader","avatar","Avatar","direction","cartItem","Typography","Search","FormControl","TextField","label","id","theme","flexGrow","marginTop","App","dataItem","setDataItem","priceItem","setPriceItem","justify","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.15101b4b.chunk.js","sourcesContent":["import React from 'react'\nimport './header.css'\nimport logo from './images/logos/logo.png'\n\nfunction Header(){\n    return(\n        <>\n            <div className=\"pokeHeader\">\n                <img src={logo} alt= 'A logo for the pokestore'></img>\n            </div>\n            <div className=\"pokeClose\"/> \n            <div className=\"pokeCloseInside\"/>\n        </>)\n}\n\nexport default Header;","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Card, CardMedia, CardActionArea, CardContent, CardActions, Button, List, ListItemText } from '@material-ui/core'\n\nconst useStyles = makeStyles({\n    root: {\n       maxWidth: 200,\n    },\n    media: {\n      alignItems: 'center',\n      alignText:'center',\n      height: 100,\n      width: 100,\n      maxWidth:'100%',\n      objectFit: 'contain'\n    },\n    content:{\n        textTransform:'capitalize'\n    }\n  })\n\n\nfunction PokeCard( props ){\n\n    const handleCart = (e)=>{\n        // props.log(props.price) \n            props.log(\n            [(<Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                    <List>\n                        <ListItemText>\n                            <strong>Pokemon:</strong> {props.name}\n                        </ListItemText>\n                        <ListItemText>\n                            <strong>Price: </strong> {props.price} coins\n                        </ListItemText>\n                    </List>\n                </CardContent>\n            </Card>), props.price]\n\n        )\n        e.preventDefault()\n    }\n    \n    const classes = useStyles()\n    return(\n    <>\n        <Card className={classes.root} coins={props.price}>\n            <CardActionArea >\n                    <CardMedia\n                        className = {classes.media}\n                        image = {props.image}\n                        title = 'This is suposed to be a PokÃ©mon'/> \n                    <CardContent className={classes.content}> \n                        <List>\n                            <ListItemText   component={'span'}>\n                                {props.name}\n                            </ListItemText>\n                            <ListItemText   component={'span'}>\n                                {`${props.price} coins`}\n                            </ListItemText>\n                        </List>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions>\n                    <Button size='small' variant='contained' color='primary' onClick={handleCart}>\n                        Add to cart now\n                    </Button>\n                </CardActions>\n        </Card>\n    </>)\n\n}\nexport default PokeCard;","import React, { useEffect, useState } from 'react'\nimport { Grid, } from '@material-ui/core'\nimport PokeCard from './pokeCard';\nimport axios from 'axios';\n\n\nconst dictId = {}\nfor (let i=1; i <= 808; i++){\n    dictId[i] = Math.floor((Math.random() * 1000) + 1)\n}\n\nfunction NestedGrid(props){\n\n    const [pokemonData, setPokemonData] = useState([]) \n    const url = 'pokemon?limit=1&offset=807'\n    const url_pattern1 = 'https://pokeapi.co/api/v2/pokemon/'\n\n    useEffect(() =>{\n        async function getData(){\n            const response = await axios.get(url_pattern1\n                \n            );\n            setPokemonData(response.data.results)\n        }\n        getData()\n    },[])\n\n    function logData(data){\n        props.logapp(data)\n    }\n    \n\n    function GridLine(){  \n        console.log(pokemonData)\n        return(\n            pokemonData.map((pokemon, i) =>(  \n                    <Grid key={i} item xs={2}>\n                        <PokeCard \n                            name={pokemon.name} \n                            image = {`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.url.split('/')[pokemon.url.split('/').length - 2]}.png`}\n                            price = {dictId[pokemon.url.split('/')[pokemon.url.split('/').length - 2]]}\n                            log= {logData}\n                        >\n                        </PokeCard>\n                    </Grid>))\n                       \n            )\n   }\n    return(            \n        <>\n            <Grid container spacing={1}>\n                <Grid container item xs={12} spacing={1}>   \n                    <GridLine></GridLine>\n                </Grid>\n            </Grid>\n                \n        </>\n    )\n}\nexport default NestedGrid;","import React from  'react'\nimport {Avatar, Grid, Card, CardContent,CardActions, Typography, Button, CardHeader } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\n\n\nconst useStyles = makeStyles({\n    root: {\n\n    },\n    card: {\n        width:'100%'\n\n    },\n    cardHeader:{\n        fontSize: '40px',\n        textAlign:'center'\n    },\n\n\n  })\n\nlet price = 0\nfunction Cart(props){\n    price  += Number(props.price/2)\n    const classes = useStyles()\n    return(\n        <>\n            <Card>\n                <CardHeader\n                    className={classes.cardHeader}\n                    title=\"Cart (3)\"\n                    avatar={\n                        <Avatar>\n                            <ShoppingCartIcon/>\n                        </Avatar>}>                   \n                </CardHeader>\n                <Grid container direction='row' spacing={1} xs={12} >\n                    <Grid container  item xs={12} spacing={1}>\n                        <Grid item xs={12}>\n                            {props.cartItem}\n                        </Grid>\n                    </Grid>\n            </Grid>\n                <CardContent>\n                <Typography component=\"p\"> <strong> Total:  </strong>{price} coins</Typography>\n            </CardContent>\n                <CardActions>\n                <Button  variant='contained' color='primary'> Buy</Button>\n            </CardActions>\n            </Card>\n            </>)\n  \n} export default Cart;","import React from 'react'\nimport { Button, TextField,  FormControl } from '@material-ui/core'\n\n\n\nfunction Search(){\n    return(\n        <>\n        <FormControl>\n            <TextField label='pokÃ©mon' variant='outlined' id='pokeSearch'/>\n            <Button variant='contained'  color='default'> Search</Button> \n        </FormControl>\n                           \n        </>\n    )\n}export default Search;","import React, { useState } from 'react';\nimport './App.css'\nimport { makeStyles } from '@material-ui/core'\nimport Header from './header'\nimport NestedGrid from './nestedGrid'\nimport Cart from './cart'\nimport { Grid }  from '@material-ui/core'\nimport 'fontsource-roboto';\nimport Search from './search';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop:100\n\n  },\n}));\n\nfunction App() {\n  const [dataItem, setDataItem] = useState([])\n  const [priceItem, setPriceItem] = useState([])\n\n  \n  function logApp(data){\n    console.log('on app ', data[0])\n    setDataItem([...dataItem, data[0]])\n    setPriceItem(data[1])\n  }\n\n\n  const classes=useStyles()\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Grid container direction =\"row\" justify='center' spacing={2} className={classes.root} >\n          <Grid container item xs={9}>\n            <NestedGrid logapp={logApp}/>\n          </Grid>\n          <Grid container item xs={3} direction='column'>\n            <Search></Search>\n            <Cart cartItem={dataItem} price={priceItem}/>\n          </Grid>     \n      </Grid>     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.abe1febe.png\";"],"sourceRoot":""}