{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _assert() {\n  const data = _interopRequireDefault(require('assert'));\n\n  _assert = function _assert() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _util() {\n  const data = require('util');\n\n  _util = function _util() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _console() {\n  const data = require('console');\n\n  _console = function _console() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // TODO: Copied from `jest-util`. Import from it in Jest 25\n\n\nfunction clearLine(stream) {\n  if (stream.isTTY) {\n    stream.write('\\x1b[999D\\x1b[K');\n  }\n}\n\nclass CustomConsole extends _console().Console {\n  constructor(stdout, stderr, formatBuffer = (_type, message) => message) {\n    super(stdout, stderr);\n\n    _defineProperty(this, '_stdout', void 0);\n\n    _defineProperty(this, '_stderr', void 0);\n\n    _defineProperty(this, '_formatBuffer', void 0);\n\n    _defineProperty(this, '_counters', void 0);\n\n    _defineProperty(this, '_timers', void 0);\n\n    _defineProperty(this, '_groupDepth', void 0);\n\n    this._stdout = stdout;\n    this._stderr = stderr;\n    this._formatBuffer = formatBuffer;\n    this._counters = {};\n    this._timers = {};\n    this._groupDepth = 0;\n  }\n\n  _log(type, message) {\n    clearLine(this._stdout);\n    super.log(this._formatBuffer(type, '  '.repeat(this._groupDepth) + message));\n  }\n\n  _logError(type, message) {\n    clearLine(this._stderr);\n    super.error(this._formatBuffer(type, '  '.repeat(this._groupDepth) + message));\n  }\n\n  assert(value, message) {\n    try {\n      (0, _assert().default)(value, message);\n    } catch (error) {\n      this._logError('assert', error.toString());\n    }\n  }\n\n  count(label = 'default') {\n    if (!this._counters[label]) {\n      this._counters[label] = 0;\n    }\n\n    this._log('count', (0, _util().format)(`${label}: ${++this._counters[label]}`));\n  }\n\n  countReset(label = 'default') {\n    this._counters[label] = 0;\n  }\n\n  debug(firstArg, ...args) {\n    this._log('debug', (0, _util().format)(firstArg, ...args));\n  }\n\n  dir(firstArg, ...args) {\n    this._log('dir', (0, _util().format)(firstArg, ...args));\n  }\n\n  dirxml(firstArg, ...args) {\n    this._log('dirxml', (0, _util().format)(firstArg, ...args));\n  }\n\n  error(firstArg, ...args) {\n    this._logError('error', (0, _util().format)(firstArg, ...args));\n  }\n\n  group(title, ...args) {\n    this._groupDepth++;\n\n    if (title || args.length > 0) {\n      this._log('group', _chalk().default.bold((0, _util().format)(title, ...args)));\n    }\n  }\n\n  groupCollapsed(title, ...args) {\n    this._groupDepth++;\n\n    if (title || args.length > 0) {\n      this._log('groupCollapsed', _chalk().default.bold((0, _util().format)(title, ...args)));\n    }\n  }\n\n  groupEnd() {\n    if (this._groupDepth > 0) {\n      this._groupDepth--;\n    }\n  }\n\n  info(firstArg, ...args) {\n    this._log('info', (0, _util().format)(firstArg, ...args));\n  }\n\n  log(firstArg, ...args) {\n    this._log('log', (0, _util().format)(firstArg, ...args));\n  }\n\n  time(label = 'default') {\n    if (this._timers[label]) {\n      return;\n    }\n\n    this._timers[label] = new Date();\n  }\n\n  timeEnd(label = 'default') {\n    const startTime = this._timers[label];\n\n    if (startTime) {\n      const endTime = new Date().getTime();\n      const time = endTime - startTime.getTime();\n\n      this._log('time', (0, _util().format)(`${label}: ${time}ms`));\n\n      delete this._timers[label];\n    }\n  }\n\n  warn(firstArg, ...args) {\n    this._logError('warn', (0, _util().format)(firstArg, ...args));\n  }\n\n  getBuffer() {\n    return undefined;\n  }\n\n}\n\nexports.default = CustomConsole;","map":{"version":3,"sources":["/home/rute/git/pokestore/node_modules/@jest/console/build/CustomConsole.js"],"names":["Object","defineProperty","exports","value","default","_assert","data","_interopRequireDefault","require","_util","_console","_chalk","obj","__esModule","_defineProperty","key","enumerable","configurable","writable","clearLine","stream","isTTY","write","CustomConsole","Console","constructor","stdout","stderr","formatBuffer","_type","message","_stdout","_stderr","_formatBuffer","_counters","_timers","_groupDepth","_log","type","log","repeat","_logError","error","assert","toString","count","label","format","countReset","debug","firstArg","args","dir","dirxml","group","title","length","bold","groupCollapsed","groupEnd","info","time","Date","timeEnd","startTime","endTime","getTime","warn","getBuffer","undefined"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _assert() {\n  const data = _interopRequireDefault(require('assert'));\n\n  _assert = function _assert() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _util() {\n  const data = require('util');\n\n  _util = function _util() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _console() {\n  const data = require('console');\n\n  _console = function _console() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// TODO: Copied from `jest-util`. Import from it in Jest 25\nfunction clearLine(stream) {\n  if (stream.isTTY) {\n    stream.write('\\x1b[999D\\x1b[K');\n  }\n}\n\nclass CustomConsole extends _console().Console {\n  constructor(stdout, stderr, formatBuffer = (_type, message) => message) {\n    super(stdout, stderr);\n\n    _defineProperty(this, '_stdout', void 0);\n\n    _defineProperty(this, '_stderr', void 0);\n\n    _defineProperty(this, '_formatBuffer', void 0);\n\n    _defineProperty(this, '_counters', void 0);\n\n    _defineProperty(this, '_timers', void 0);\n\n    _defineProperty(this, '_groupDepth', void 0);\n\n    this._stdout = stdout;\n    this._stderr = stderr;\n    this._formatBuffer = formatBuffer;\n    this._counters = {};\n    this._timers = {};\n    this._groupDepth = 0;\n  }\n\n  _log(type, message) {\n    clearLine(this._stdout);\n    super.log(\n      this._formatBuffer(type, '  '.repeat(this._groupDepth) + message)\n    );\n  }\n\n  _logError(type, message) {\n    clearLine(this._stderr);\n    super.error(\n      this._formatBuffer(type, '  '.repeat(this._groupDepth) + message)\n    );\n  }\n\n  assert(value, message) {\n    try {\n      (0, _assert().default)(value, message);\n    } catch (error) {\n      this._logError('assert', error.toString());\n    }\n  }\n\n  count(label = 'default') {\n    if (!this._counters[label]) {\n      this._counters[label] = 0;\n    }\n\n    this._log(\n      'count',\n      (0, _util().format)(`${label}: ${++this._counters[label]}`)\n    );\n  }\n\n  countReset(label = 'default') {\n    this._counters[label] = 0;\n  }\n\n  debug(firstArg, ...args) {\n    this._log('debug', (0, _util().format)(firstArg, ...args));\n  }\n\n  dir(firstArg, ...args) {\n    this._log('dir', (0, _util().format)(firstArg, ...args));\n  }\n\n  dirxml(firstArg, ...args) {\n    this._log('dirxml', (0, _util().format)(firstArg, ...args));\n  }\n\n  error(firstArg, ...args) {\n    this._logError('error', (0, _util().format)(firstArg, ...args));\n  }\n\n  group(title, ...args) {\n    this._groupDepth++;\n\n    if (title || args.length > 0) {\n      this._log(\n        'group',\n        _chalk().default.bold((0, _util().format)(title, ...args))\n      );\n    }\n  }\n\n  groupCollapsed(title, ...args) {\n    this._groupDepth++;\n\n    if (title || args.length > 0) {\n      this._log(\n        'groupCollapsed',\n        _chalk().default.bold((0, _util().format)(title, ...args))\n      );\n    }\n  }\n\n  groupEnd() {\n    if (this._groupDepth > 0) {\n      this._groupDepth--;\n    }\n  }\n\n  info(firstArg, ...args) {\n    this._log('info', (0, _util().format)(firstArg, ...args));\n  }\n\n  log(firstArg, ...args) {\n    this._log('log', (0, _util().format)(firstArg, ...args));\n  }\n\n  time(label = 'default') {\n    if (this._timers[label]) {\n      return;\n    }\n\n    this._timers[label] = new Date();\n  }\n\n  timeEnd(label = 'default') {\n    const startTime = this._timers[label];\n\n    if (startTime) {\n      const endTime = new Date().getTime();\n      const time = endTime - startTime.getTime();\n\n      this._log('time', (0, _util().format)(`${label}: ${time}ms`));\n\n      delete this._timers[label];\n    }\n  }\n\n  warn(firstArg, ...args) {\n    this._logError('warn', (0, _util().format)(firstArg, ...args));\n  }\n\n  getBuffer() {\n    return undefined;\n  }\n}\n\nexports.default = CustomConsole;\n"]},"metadata":{},"sourceType":"script"}