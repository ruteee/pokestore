{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require('path'));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _slash() {\n  const data = _interopRequireDefault(require('slash'));\n\n  _slash = function _slash() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar _default = (root, verbose, buffer) => {\n  const TITLE_INDENT = verbose ? '  ' : '    ';\n  const CONSOLE_INDENT = TITLE_INDENT + '  ';\n  return buffer.reduce((output, {\n    type,\n    message,\n    origin\n  }) => {\n    origin = (0, _slash().default)(_path().default.relative(root, origin));\n    message = message.split(/\\n/).map(line => CONSOLE_INDENT + line).join('\\n');\n    let typeMessage = 'console.' + type;\n\n    if (type === 'warn') {\n      message = _chalk().default.yellow(message);\n      typeMessage = _chalk().default.yellow(typeMessage);\n    } else if (type === 'error') {\n      message = _chalk().default.red(message);\n      typeMessage = _chalk().default.red(typeMessage);\n    }\n\n    return output + TITLE_INDENT + _chalk().default.dim(typeMessage) + ' ' + _chalk().default.dim(origin) + '\\n' + message + '\\n';\n  }, '');\n};\n\nexports.default = _default;","map":{"version":3,"sources":["/home/rute/git/pokestore/node_modules/@jest/console/build/getConsoleOutput.js"],"names":["Object","defineProperty","exports","value","default","_path","data","_interopRequireDefault","require","_chalk","_slash","obj","__esModule","_default","root","verbose","buffer","TITLE_INDENT","CONSOLE_INDENT","reduce","output","type","message","origin","relative","split","map","line","join","typeMessage","yellow","red","dim"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,MAAD,CAAR,CAAnC;;AAEAH,EAAAA,KAAK,GAAG,SAASA,KAAT,GAAiB;AACvB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASG,MAAT,GAAkB;AAChB,QAAMH,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEAC,EAAAA,MAAM,GAAG,SAASA,MAAT,GAAkB;AACzB,WAAOH,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASI,MAAT,GAAkB;AAChB,QAAMJ,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEAE,EAAAA,MAAM,GAAG,SAASA,MAAT,GAAkB;AACzB,WAAOJ,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASC,sBAAT,CAAgCI,GAAhC,EAAqC;AACnC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAACP,IAAAA,OAAO,EAAEO;AAAV,GAArC;AACD;AAED;;;;;;;;AAMA,IAAIE,QAAQ,GAAG,CAACC,IAAD,EAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AACxC,QAAMC,YAAY,GAAGF,OAAO,GAAG,IAAH,GAAU,MAAtC;AACA,QAAMG,cAAc,GAAGD,YAAY,GAAG,IAAtC;AACA,SAAOD,MAAM,CAACG,MAAP,CAAc,CAACC,MAAD,EAAS;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,GAAT,KAAqC;AACxDA,IAAAA,MAAM,GAAG,CAAC,GAAGb,MAAM,GAAGN,OAAb,EAAsBC,KAAK,GAAGD,OAAR,CAAgBoB,QAAhB,CAAyBV,IAAzB,EAA+BS,MAA/B,CAAtB,CAAT;AACAD,IAAAA,OAAO,GAAGA,OAAO,CACdG,KADO,CACD,IADC,EAEPC,GAFO,CAEHC,IAAI,IAAIT,cAAc,GAAGS,IAFtB,EAGPC,IAHO,CAGF,IAHE,CAAV;AAIA,QAAIC,WAAW,GAAG,aAAaR,IAA/B;;AAEA,QAAIA,IAAI,KAAK,MAAb,EAAqB;AACnBC,MAAAA,OAAO,GAAGb,MAAM,GAAGL,OAAT,CAAiB0B,MAAjB,CAAwBR,OAAxB,CAAV;AACAO,MAAAA,WAAW,GAAGpB,MAAM,GAAGL,OAAT,CAAiB0B,MAAjB,CAAwBD,WAAxB,CAAd;AACD,KAHD,MAGO,IAAIR,IAAI,KAAK,OAAb,EAAsB;AAC3BC,MAAAA,OAAO,GAAGb,MAAM,GAAGL,OAAT,CAAiB2B,GAAjB,CAAqBT,OAArB,CAAV;AACAO,MAAAA,WAAW,GAAGpB,MAAM,GAAGL,OAAT,CAAiB2B,GAAjB,CAAqBF,WAArB,CAAd;AACD;;AAED,WACET,MAAM,GACNH,YADA,GAEAR,MAAM,GAAGL,OAAT,CAAiB4B,GAAjB,CAAqBH,WAArB,CAFA,GAGA,GAHA,GAIApB,MAAM,GAAGL,OAAT,CAAiB4B,GAAjB,CAAqBT,MAArB,CAJA,GAKA,IALA,GAMAD,OANA,GAOA,IARF;AAUD,GA1BM,EA0BJ,EA1BI,CAAP;AA2BD,CA9BD;;AAgCApB,OAAO,CAACE,OAAR,GAAkBS,QAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require('path'));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _slash() {\n  const data = _interopRequireDefault(require('slash'));\n\n  _slash = function _slash() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar _default = (root, verbose, buffer) => {\n  const TITLE_INDENT = verbose ? '  ' : '    ';\n  const CONSOLE_INDENT = TITLE_INDENT + '  ';\n  return buffer.reduce((output, {type, message, origin}) => {\n    origin = (0, _slash().default)(_path().default.relative(root, origin));\n    message = message\n      .split(/\\n/)\n      .map(line => CONSOLE_INDENT + line)\n      .join('\\n');\n    let typeMessage = 'console.' + type;\n\n    if (type === 'warn') {\n      message = _chalk().default.yellow(message);\n      typeMessage = _chalk().default.yellow(typeMessage);\n    } else if (type === 'error') {\n      message = _chalk().default.red(message);\n      typeMessage = _chalk().default.red(typeMessage);\n    }\n\n    return (\n      output +\n      TITLE_INDENT +\n      _chalk().default.dim(typeMessage) +\n      ' ' +\n      _chalk().default.dim(origin) +\n      '\\n' +\n      message +\n      '\\n'\n    );\n  }, '');\n};\n\nexports.default = _default;\n"]},"metadata":{},"sourceType":"script"}